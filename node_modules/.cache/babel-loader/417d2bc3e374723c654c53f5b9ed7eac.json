{"ast":null,"code":"var _jsxFileName = \"/Users/gulnara/github/react-apps/my-todo-list/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport './app.css';\nimport TodoList from '../todo-list/todo-list';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport Filter from '../filter/filter';\nimport NewItem from '../new-item/new-item';\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.toFormData(1, 'Reply email', 'Todo'), this.toFormData(2, 'Meet Sarah', 'Todo'), this.toFormData(3, 'Make Dinner', 'Todo'), this.toFormData(4, 'Milk', 'To buy'), this.toFormData(5, 'Chease', 'To buy'), this.toFormData(6, 'Book', 'To buy'), this.toFormData(7, 'To play with kids', 'Family')],\n      searchingText: '',\n      activeFilter: 'all'\n    };\n\n    this.labelClickHandler = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex(item => item.id === id);\n        const newData = [...todoData.slice(0, indx), { ...todoData[indx],\n          done: !todoData[indx].done\n        }, ...todoData.slice(indx + 1)];\n        return {\n          todoData: newData\n        };\n      });\n    };\n\n    this.importantClickHandler = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex(item => item.id === id);\n        const newData = [...todoData.slice(0, indx), { ...todoData[indx],\n          important: !todoData[indx].important\n        }, ...todoData.slice(indx + 1)];\n        return {\n          todoData: newData\n        };\n      });\n    };\n\n    this.deleteClickHandler = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex(item => item.id === id);\n        const newData = [...todoData.slice(0, indx), ...todoData.slice(indx + 1)];\n        return {\n          todoData: newData\n        };\n      });\n    };\n\n    this.newItemAddHandler = (label, group) => {\n      this.setState(({\n        todoData\n      }) => {\n        const newData = [...todoData];\n        newData.push(this.toFormData(this.maxId++, label, group));\n        return {\n          todoData: newData\n        };\n      });\n    };\n\n    this.searchingChangeHandler = text => {\n      this.setState({\n        searchingText: text\n      });\n    };\n\n    this.filterClickHandler = filter => {\n      this.setState({\n        activeFilter: filter\n      });\n    };\n  }\n\n  toFormData(id, label, group, important = false, done = false) {\n    return {\n      id,\n      label,\n      group,\n      important,\n      done\n    };\n  }\n\n  searchItems(items, text) {\n    return items.filter(item => item.label.toLowerCase().includes(text.toLowerCase()));\n  }\n\n  filterItems(items, filter) {\n    switch (key) {\n      case value:\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      searchingText,\n      activeFilter\n    } = this.state;\n    const groups = Array.from(new Set(todoData.map(item => item.group)));\n    const filteredData = this.filterItems(todoData, activeFilter);\n    const searchingData = this.searchItems(todoData, searchingText);\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app__search-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      onSearchingChange: this.searchingChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Filter, {\n      activeFilter: activeFilter,\n      onFilterClick: this.filterClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TodoList, {\n      data: searchingData,\n      onLabelClick: this.labelClickHandler,\n      onImportantBtnClick: this.importantClickHandler,\n      onDeleteButtonClick: this.deleteClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(NewItem, {\n      groups: groups,\n      onNewItemSubmit: this.newItemAddHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/gulnara/github/react-apps/my-todo-list/src/components/app/app.js"],"names":["React","Component","TodoList","AppHeader","SearchPanel","Filter","NewItem","App","constructor","maxId","state","todoData","toFormData","searchingText","activeFilter","labelClickHandler","id","setState","indx","findIndex","item","newData","slice","done","importantClickHandler","important","deleteClickHandler","newItemAddHandler","label","group","push","searchingChangeHandler","text","filterClickHandler","filter","searchItems","items","toLowerCase","includes","filterItems","key","value","render","groups","Array","from","Set","map","filteredData","searchingData"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport './app.css';\nimport TodoList from '../todo-list/todo-list';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport Filter from '../filter/filter';\nimport NewItem from '../new-item/new-item';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.maxId = 100;\n\n    this.state = {\n      todoData: [\n        this.toFormData(1, 'Reply email', 'Todo'),\n        this.toFormData(2, 'Meet Sarah', 'Todo'),\n        this.toFormData(3, 'Make Dinner', 'Todo'),\n        this.toFormData(4, 'Milk', 'To buy'),\n        this.toFormData(5, 'Chease', 'To buy'),\n        this.toFormData(6, 'Book', 'To buy'),\n        this.toFormData(7, 'To play with kids', 'Family'),\n      ],\n      searchingText: '',\n      activeFilter: 'all',\n    };\n\n    this.labelClickHandler = (id) => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex((item) => item.id === id);\n\n        const newData = [\n          ...todoData.slice(0, indx),\n          {\n            ...todoData[indx],\n            done: !todoData[indx].done\n          },\n          ...todoData.slice(indx + 1),\n        ];\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.importantClickHandler = (id) => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex((item) => item.id === id);\n\n        const newData = [\n          ...todoData.slice(0, indx),\n          {\n            ...todoData[indx],\n            important: !todoData[indx].important\n          },\n          ...todoData.slice(indx + 1),\n        ];\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.deleteClickHandler = (id) => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex((item) => item.id === id);\n\n        const newData = [\n          ...todoData.slice(0, indx),\n          ...todoData.slice(indx + 1),\n        ];\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.newItemAddHandler = (label, group) => {\n      this.setState(({\n        todoData\n      }) => {\n        const newData = [...todoData];\n        newData.push(this.toFormData(this.maxId++, label, group));\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.searchingChangeHandler = (text) => {\n      this.setState({\n        searchingText: text\n      });\n    }\n\n    this.filterClickHandler = (filter) => {\n      this.setState({activeFilter: filter})\n    }\n  }\n\n  toFormData(id, label, group, important = false, done = false) {\n    return ({\n      id,\n      label,\n      group,\n      important,\n      done\n    });\n  }\n\n  searchItems(items, text) {\n    return items.filter((item) => item.label.toLowerCase().includes(text.toLowerCase()));\n  }\n\n  filterItems(items, filter) {\n    switch (key) {\n      case value:\n        \n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      searchingText,\n      activeFilter\n    } = this.state;\n    const groups = Array.from(new Set(todoData.map((item) => item.group)));\n    const filteredData = this.filterItems(todoData, activeFilter);\n    const searchingData = this.searchItems(todoData, searchingText);\n    return ( \n      <main className = \"app\">\n        <AppHeader />\n        <div className = 'app__search-filter' >\n          <SearchPanel onSearchingChange = {\n            this.searchingChangeHandler}/> \n          <Filter\n          activeFilter={activeFilter}\n          onFilterClick={this.filterClickHandler}/>\n        </div> \n        <TodoList data = {searchingData}\n          onLabelClick = {this.labelClickHandler}\n          onImportantBtnClick = {this.importantClickHandler}\n          onDeleteButtonClick = {this.deleteClickHandler} />\n        <NewItem groups = {groups}\n          onNewItemSubmit = {this.newItemAddHandler} /> \n      </main>);\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}