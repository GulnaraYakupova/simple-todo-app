{"version":3,"sources":["components/todo-item/todo-item.js","components/todo-group/todo-group.js","components/todo-list/todo-list.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/filter/filter.js","components/new-item/new-item.js","components/app/app.js","index.js"],"names":["TodoItem","label","onLabelClick","itemClass","done","important","className","onClick","TodoGroup","group","tasks","color","onImportantBtnClick","onDeleteButtonClick","style","backgroundColor","todoGroupMarkup","map","id","key","groupLabelColors","TodoList","data","groups","Set","item","todoListMarkup","Array","from","i","filter","AppHeader","SearchPanel","onSearchingChange","type","placeholder","onChange","evt","target","value","Filter","activeFilter","onFilterClick","buttonsMarkup","name","NewItem","state","groupValue","onLabelChange","setState","onFormSubmit","preventDefault","props","onNewItemSubmit","onGroupChange","this","groupsMarkup","Fragment","checked","htmlFor","onSubmit","Component","App","maxId","todoData","toFormData","searchingText","labelClickHandler","indx","findIndex","slice","importantClickHandler","deleteClickHandler","newItemAddHandler","newData","push","searchingChangeHandler","text","filterClickHandler","items","toLowerCase","includes","filteredData","filterItems","searchingData","searchItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e139d0e.chunk.js","sourcesContent":["import React from 'react';\nimport './todo-item.css';\n\nconst  TodoItem = ({label, onLabelClick, done, important}) => {\n  let itemClass = 'todo-item';\n  if (done) {\n    itemClass += ' todo-item--done';\n  }\n\n  if (important) {\n    itemClass += ' todo-item--important'\n  }\n\n  return (<span className={itemClass} onClick={onLabelClick}>{label}</span>);\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport './todo-group.css';\nimport TodoItem from '../todo-item/todo-item';\n\nconst TodoGroup = ({group, tasks, color, onLabelClick, onImportantBtnClick, onDeleteButtonClick}) => {\n\n  const style = {\n    backgroundColor: color,\n  };\n\n  const todoGroupMarkup = tasks.map(({id, label, done, important})=> (\n    <li key={id}>\n      <TodoItem\n        label={label}\n        onLabelClick={()=>onLabelClick(id)}\n        done={done}\n        important={important}\n      />\n      <div className='todo-group__buttons'>\n        <button className='todo-group__button todo-group__button--important fa fa-exclamation'\n        onClick={()=>onImportantBtnClick(id)}\n        ></button>\n        <button className='todo-group__button todo-group__button--delete fa fa-trash'\n        onClick={()=> onDeleteButtonClick(id)}\n        ></button>\n      </div>\n    </li>\n  ));\n\n  return (<div className='todo-group'>\n    <h3 style={style}>{group}</h3>\n    <ul className='todo-group__list'>\n      {todoGroupMarkup}\n    </ul>\n  </div>);\n};\n\nexport default TodoGroup;\n","import React from 'react';\nimport './todo-list.css';\n\nimport TodoGroup from '../todo-group/todo-group';\n\nconst groupLabelColors = [\n  'rgb(0, 0, 0)',\n  'rgb(214, 24, 93)',\n  'rgb(226, 59, 53)',\n]\n\nconst  TodoList = ({data, onLabelClick, onImportantBtnClick, onDeleteButtonClick}) => {\n  const groups = new Set(data.map((item)=> item.group));\n\n  const todoListMarkup = Array.from(groups).map((group, i) => (\n    <TodoGroup group={group}\n    color={groupLabelColors[i]}\n    onLabelClick={onLabelClick}\n    tasks={data.filter((item) => item.group === group)} key={group}\n    onImportantBtnClick={onImportantBtnClick}\n    onDeleteButtonClick={onDeleteButtonClick}\n    />\n  ));\n\n  return (<section className='todo-list'>\n    {todoListMarkup}\n  </section>);\n};\n\nexport default TodoList;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = () => {\n  return (<h1 className=\"app-header\">Simple Todo app</h1>);\n};\n\nexport default AppHeader;","import React from 'react';\nimport './search-panel.css';\n\nconst SearchPanel = ({onSearchingChange}) => {\n  return (\n    <input type='text' placeholder='type to search'\n      className='search-panel'\n      onChange={(evt) => onSearchingChange(evt.target.value)}\n    ></input>\n  );\n}\n\nexport default SearchPanel;\n","import React from 'react';\nimport './filter.css';\n\n\nconst Filter = ({activeFilter, onFilterClick}) => {\n\n  const buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' },\n  ];\n\n  const buttonsMarkup = buttons.map(({name, label}) => (\n    <button\n      className={`filter__button ${name===activeFilter ? 'filter__button--active' : ''}`}\n      type='button' key={name}\n      onClick={() => onFilterClick(name)}\n    >{label}</button>\n  ));\n\n  return (\n    <div className='filter'>\n      {buttonsMarkup}\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, {Component} from 'react'\nimport './new-item.css';\n\nexport default class NewItem extends Component {\n  constructor () {\n    super();\n\n    this.state = {\n      label: '',\n      groupValue: 'Todo',\n    }\n\n    this.onLabelChange = (evt) => {\n      this.setState({\n        label: evt.target.value,\n      })\n    } \n\n    this.onFormSubmit = (evt) => {\n      evt.preventDefault();\n      const {label, groupValue} = this.state;\n      this.props.onNewItemSubmit(label, groupValue);\n      this.setState({label: ''});\n    }\n\n    this.onGroupChange = (evt) => {\n      this.setState({groupValue: evt.target.value});\n    }\n  }\n\n  render() {\n    const {groups} = this.props;\n\n    const {groupValue} = this.state;\n \n    const groupsMarkup = groups.map((group) => (\n      <React.Fragment key={group}>\n        <input className='new-item__checkbox'\n         type='radio' name='group' value={group}\n          id={group}\n          onChange={this.onGroupChange}\n          checked = {groupValue === group}\n        />\n        <label className='new-item__group'\n         htmlFor={group}>{group}</label>\n      </React.Fragment>\n    ));\n\n    return (\n    <form className='new-item'\n      onSubmit={this.onFormSubmit}\n    >\n      <input className='new-item__label'\n        type='text' placeholder='type your next task...'\n        onChange={this.onLabelChange}\n        value={this.state.label}\n      />\n      <div className='new-item__groups-block'>\n        {groupsMarkup}\n      </div>\n      <button className='new-item__button'\n      type='submit'>Add</button>\n    </form>\n    );\n  }\n}\n","import React, {\n  Component\n} from 'react';\nimport './app.css';\nimport TodoList from '../todo-list/todo-list';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport Filter from '../filter/filter';\nimport NewItem from '../new-item/new-item';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.maxId = 100;\n\n    this.state = {\n      todoData: [\n        this.toFormData(1, 'Reply email', 'Todo'),\n        this.toFormData(2, 'Meet Sarah', 'Todo'),\n        this.toFormData(3, 'Make Dinner', 'Todo'),\n        this.toFormData(4, 'Milk', 'To buy'),\n        this.toFormData(5, 'Chease', 'To buy'),\n        this.toFormData(6, 'Book', 'To buy'),\n        this.toFormData(7, 'To play with kids', 'Family'),\n      ],\n      searchingText: '',\n      activeFilter: 'all',\n    };\n\n    this.labelClickHandler = (id) => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex((item) => item.id === id);\n\n        const newData = [\n          ...todoData.slice(0, indx),\n          {\n            ...todoData[indx],\n            done: !todoData[indx].done\n          },\n          ...todoData.slice(indx + 1),\n        ];\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.importantClickHandler = (id) => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex((item) => item.id === id);\n\n        const newData = [\n          ...todoData.slice(0, indx),\n          {\n            ...todoData[indx],\n            important: !todoData[indx].important\n          },\n          ...todoData.slice(indx + 1),\n        ];\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.deleteClickHandler = (id) => {\n      this.setState(({\n        todoData\n      }) => {\n        const indx = todoData.findIndex((item) => item.id === id);\n\n        const newData = [\n          ...todoData.slice(0, indx),\n          ...todoData.slice(indx + 1),\n        ];\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.newItemAddHandler = (label, group) => {\n      this.setState(({\n        todoData\n      }) => {\n        const newData = [...todoData];\n        newData.push(this.toFormData(this.maxId++, label, group));\n\n        return {\n          todoData: newData,\n        }\n      })\n    };\n\n    this.searchingChangeHandler = (text) => {\n      this.setState({\n        searchingText: text\n      });\n    }\n\n    this.filterClickHandler = (filter) => {\n      this.setState({activeFilter: filter})\n    }\n  }\n\n  toFormData(id, label, group, important = false, done = false) {\n    return ({\n      id,\n      label,\n      group,\n      important,\n      done\n    });\n  }\n\n  searchItems(items, text) {\n    return items.filter((item) => item.label.toLowerCase().includes(text.toLowerCase()));\n  }\n\n  filterItems(items, filter) {\n    switch (filter) {\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done' :\n        return items.filter((item) => item.done);\n      default:\n        return  items;\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      searchingText,\n      activeFilter\n    } = this.state;\n    const groups = ['Todo', 'To buy', 'Family'];\n    const filteredData = this.filterItems(todoData, activeFilter);\n    const searchingData = this.searchItems(filteredData, searchingText);\n    return ( \n      <main className = \"app\">\n        <AppHeader />\n        <div className = 'app__search-filter' >\n          <SearchPanel onSearchingChange = {\n            this.searchingChangeHandler}/> \n          <Filter\n          activeFilter={activeFilter}\n          onFilterClick={this.filterClickHandler}/>\n        </div> \n        <TodoList data = {searchingData}\n          onLabelClick = {this.labelClickHandler}\n          onImportantBtnClick = {this.importantClickHandler}\n          onDeleteButtonClick = {this.deleteClickHandler} />\n        <NewItem groups = {groups}\n          onNewItemSubmit = {this.newItemAddHandler} /> \n      </main>);\n    }\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}